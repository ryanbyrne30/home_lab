---
# TLS Certs
- name: Set cert facts
  ansible.builtin.set_fact:
    cert_path: /etc/nginx/certs

- name: Set other cert facts
  ansible.builtin.set_fact:
    private_key: "{{ cert_path }}/server.key"
    public_key: "{{ cert_path }}/server.crt"

- name: Make cert path
  become: true
  shell: |
    mkdir -p {{ cert_path }}

- name: Check server private key exists
  stat:
    path: "{{ private_key }}"
  register: private_key_path

- name: Check server public key exists
  stat:
    path: "{{ public_key }}"
  register: public_key_path

- name: Create private key file
  become: true
  community.crypto.openssl_privatekey:
    path: "{{ private_key }}"
  when: private_key_path.stat.exists != true

- name: Create self-signed certificates if not exist
  become: true
  community.crypto.x509_certificate:
    path: "{{ public_key }}"
    privatekey_path: "{{ private_key }}"
    provider: selfsigned
  when: public_key_path.stat.exists != true

# NGINX
- name: Set NGINX facts
  ansible.builtin.set_fact:
    override_nginx_conf: "{{ replace_nginx_conf | default(false) }}"

- name: Install NGINX
  become: true
  ansible.builtin.apt:
    name: nginx
    state: present

- name: Remove default nginx service (sites-enabled)
  become: true
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Write config (override "default")
  become: true
  ansible.builtin.template:
    src: "{{ template }}"
    dest: /etc/nginx/nginx.conf
    backup: true
    mode: 0644
    owner: root
  when: override_nginx_conf|bool == false

- name: Restart NGINX
  become: true
  ansible.builtin.systemd_service:
    name: nginx
    state: restarted
    enabled: true
